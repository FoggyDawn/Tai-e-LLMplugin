[
    "<com.vladium.jcd.lib.Types$typeDescriptorCompiler2: java.lang.String descriptorToClass(java.lang.String)>",
    "<com.vladium.util.args.OptsParser: boolean isOpt(java.lang.String,int,com.vladium.util.args.OptsParser$OptDef)>",
    "<com.vladium.emma.report.html.ReportGenerator: java.lang.Object visit(com.vladium.emma.report.PackageItem,java.lang.Object)>",
    "<com.vladium.emma.instr.InstrVisitor: java.lang.Object visit(com.vladium.jcd.cls.attribute.SourceFileAttribute_info,java.lang.Object)>",
    "<com.vladium.logging.Logger: void pop(com.vladium.logging.Logger)>",
    "<com.vladium.emma.filter.IInclExclFilter$Factory: com.vladium.emma.filter.IInclExclFilter create(java.lang.String,java.lang.String,java.lang.String[])>",
    "<com.vladium.emma.ant.SuppressableTask: com.vladium.util.IProperties getTaskSettings()>",
    "<com.vladium.emma.rt.InstrClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>",
    "<com.vladium.util.exception.AbstractException: java.lang.String getMessage()>",
    "<java.awt.Toolkit$1: java.lang.Object run()>",
    "<com.vladium.emma.report.txt.ReportGenerator: void addTitleRow(java.lang.String,int,int)>",
    "<com.vladium.util.IntObjectMap: java.lang.Object put(int,java.lang.Object)>",
    "<com.vladium.emma.report.ReportProcessor: void <clinit>()>",
    "<com.vladium.emma.report.html.doc.Text: void emit(com.vladium.emma.report.html.doc.HTMLWriter)>",
    "<java.util.PropertyResourceBundle: java.util.Enumeration getKeys()>",
    "<com.vladium.logging.Logger: void log(int,java.lang.String,boolean)>",
    "<com.vladium.jcd.cls.attribute.ConstantValueAttribute_info: void writeInClassFormat(com.vladium.jcd.lib.UDataOutputStream)>",
    "<com.vladium.jcd.cls.ClassDef: int addField(java.lang.String,java.lang.String,int,com.vladium.jcd.cls.IAttributeCollection)>",
    "<com.vladium.emma.instr.InstrProcessor: void createDir(java.io.File,boolean)>",
    "<com.vladium.emma.filter.IInclExclFilter$Factory: com.vladium.emma.filter.IInclExclFilter create(java.lang.String[])>",
    "<com.vladium.jcd.cls.constant.CONSTANT_Float_info: void writeInClassFormat(com.vladium.jcd.lib.UDataOutputStream)>",
    "<com.vladium.emma.instr.InstrProcessor$OutMode: void <clinit>()>",
    "<com.vladium.emma.report.PackageItem: void accept(com.vladium.emma.report.IItemVisitor,java.lang.Object)>",
    "<com.vladium.emma.EMMARuntimeException: void <init>(java.lang.String,java.lang.Object[],java.lang.Throwable)>",
    "<com.vladium.emma.report.html.doc.IElement$Factory: com.vladium.emma.report.html.doc.IElement create(com.vladium.emma.report.html.doc.Tag,com.vladium.emma.report.html.doc.AttributeSet)>",
    "<com.vladium.emma.report.html.doc.HTMLDocument: void addLINK(java.lang.String,java.lang.String)>",
    "<com.vladium.emma.rt.ClassPathProcessorST: void handleFile(java.io.File,java.io.File)>",
    "<com.vladium.logging.Logger: void trace1(java.lang.String,java.lang.String)>",
    "<com.vladium.emma.Command: java.lang.String[] getListOptValue(com.vladium.util.args.IOptsParser$IOpt,java.lang.String,boolean)>",
    "<com.vladium.jcd.cls.InterfaceCollection: void writeInClassFormat(com.vladium.jcd.lib.UDataOutputStream)>",
    "<org.apache.tools.ant.AntClassLoader: void <init>(org.apache.tools.ant.Project,org.apache.tools.ant.types.Path)>",
    "<com.vladium.util.exception.ExceptionCommon: java.util.ResourceBundle addExceptionResource(java.lang.Class,java.lang.String)>",
    "<com.vladium.emma.report.html.ReportGenerator: com.vladium.emma.report.html.doc.IContent getPageTitle()>",
    "<com.vladium.jcd.cls.ClassDef: int[] getFields(java.lang.String)>",
    "<com.vladium.emma.data.DataFactory$RandomAccessFileInputStream: void <init>(java.io.RandomAccessFile,int)>",
    "<com.vladium.jcd.cls.attribute.SourceFileAttribute_info: void <init>(int,long,com.vladium.jcd.lib.UDataInputStream)>",
    "<com.vladium.util.Property: java.util.Properties getSystemProperties(java.lang.String)>",
    "<com.vladium.jcd.cls.attribute.InnerClassesAttribute_info: java.lang.String toString()>",
    "<com.vladium.jcd.cls.attribute.SyntheticAttribute_info: void <init>(int)>",
    "<com.vladium.jcd.cls.AttributeCollection: void writeInClassFormat(com.vladium.jcd.lib.UDataOutputStream)>",
    "<com.vladium.util.SoftValueMap$SoftEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,java.lang.Object,com.vladium.util.SoftValueMap$SoftEntry,int)>",
    "<com.vladium.jcd.cls.ClassDef: int addClassref(java.lang.String)>",
    "<com.vladium.emma.instr.InstrProcessorST$EntryWriteJob: void run()>",
    "<org.apache.tools.ant.ProjectHelper$TaskHandler: void init(java.lang.String,org.xml.sax.AttributeList)>",
    "<com.vladium.emma.report.html.doc.HTMLWriter: void write(java.lang.String)>",
    "<org.apache.tools.ant.ProjectHelper$NestedElementHandler: void init(java.lang.String,org.xml.sax.AttributeList)>",
    "<java.security.Security: void initialize()>",
    "<com.vladium.jcd.cls.ConstantCollection: void writeInClassFormat(com.vladium.jcd.lib.UDataOutputStream)>",
    "<org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher: java.lang.Process exec(org.apache.tools.ant.Project,java.lang.String[],java.lang.String[],java.io.File)>",
    "<com.vladium.jcd.lib.Types$typeDescriptorCompiler2: java.lang.String arrayOf(java.lang.String)>"
]